{"buildConfigurations":[{"buildSettings":{"CODE_SIGN_STYLE":"Automatic","PRODUCT_NAME":"$(TARGET_NAME)"},"guid":"ec78d7672e3d48ee7d9705b622b70252a50ad8ad5cbf245e556372733e6e7db0","name":"Debug"},{"buildSettings":{"CODE_SIGN_STYLE":"Automatic","PRODUCT_NAME":"$(TARGET_NAME)"},"guid":"ec78d7672e3d48ee7d9705b622b702528b22dcda9e0d78e2a01a6a0ef99d47e3","name":"Release"}],"buildPhases":[{"buildFiles":[],"emitEnvironment":"true","guid":"ec78d7672e3d48ee7d9705b622b70252a9879446986ccb30811075e75ba3726f","inputFileListPaths":[],"inputFilePaths":[],"name":"Run Script","originalObjectID":"F3409E4E24992D0900F1099C","outputFileListPaths":[],"outputFilePaths":[],"scriptContents":"#!/bin/sh\nUNIVERSAL_OUTPUTFOLDER=${BUILD_DIR}/${CONFIGURATION}-universal\n# make sure the output directory exists\nmkdir -p \"${UNIVERSAL_OUTPUTFOLDER}\"\n# Step 1. Build Device and Simulator versions. This also include the full bitcode generation of framework\nxcodebuild BITCODE_GENERATION_MODE=bitcode OTHER_CFLAGS=\"-fembed-bitcode\" -target \"${PROJECT_NAME}\" -project \"${PROJECT_NAME}.xcodeproj\" ONLY_ACTIVE_ARCH=NO -configuration ${CONFIGURATION} -sdk iphoneos BUILD_DIR=\"${BUILD_DIR}\" BUILD_ROOT=\"${BUILD_ROOT}\"\nxcodebuild BITCODE_GENERATION_MODE=bitcode OTHER_CFLAGS=\"-fembed-bitcode\" -target \"${PROJECT_NAME}\" -project \"${PROJECT_NAME}.xcodeproj\" ONLY_ACTIVE_ARCH=NO -configuration ${CONFIGURATION} -sdk iphonesimulator BUILD_DIR=\"${BUILD_DIR}\" BUILD_ROOT=\"${BUILD_ROOT}\"\n# Step 2. Copy the framework structure (from iphoneos build) to the universal folder\ncp -R \"${BUILD_DIR}/${CONFIGURATION}-iphoneos/${PROJECT_NAME}.framework\" \"${UNIVERSAL_OUTPUTFOLDER}/\"\n# Step 3. Copy Swift modules (from iphonesimulator build) to the copied framework directory\ncp -R \"${BUILD_DIR}/${CONFIGURATION}-iphonesimulator/${PROJECT_NAME}.framework/Modules/${PROJECT_NAME}.swiftmodule/.\" \"${UNIVERSAL_OUTPUTFOLDER}/${PROJECT_NAME}.framework/Modules/${PROJECT_NAME}.swiftmodule\"\n# Step 4. Create universal binary file using lipo and place the combined executable in the copied framework directory\nlipo -create -output \"${UNIVERSAL_OUTPUTFOLDER}/${PROJECT_NAME}.framework/${PROJECT_NAME}\" \"${BUILD_DIR}/${CONFIGURATION}-iphonesimulator/${PROJECT_NAME}.framework/${PROJECT_NAME}\" \"${BUILD_DIR}/${CONFIGURATION}-iphoneos/${PROJECT_NAME}.framework/${PROJECT_NAME}\"\n# Step 5. Convenience step to copy the framework to the project's directory\ncp -R \"${UNIVERSAL_OUTPUTFOLDER}/${PROJECT_NAME}.framework\" \"${PROJECT_DIR}\"\n# Step 6. Convenience step to open the project's directory in Finder\nopen \"${PROJECT_DIR}\"\n","shellPath":"/bin/sh","type":"com.apple.buildphase.shell-script"}],"buildRules":[],"dependencies":[],"guid":"ec78d7672e3d48ee7d9705b622b70252a76ea772daa5ca8224c98f80bda0db15","name":"PhysicsKit-Aggregate","provisioningSourceData":[{"bundleIdentifierFromInfoPlist":"","configurationName":"Debug","legacyTeamID":"","provisioningStyle":0},{"bundleIdentifierFromInfoPlist":"","configurationName":"Release","legacyTeamID":"","provisioningStyle":0}],"type":"aggregate"}